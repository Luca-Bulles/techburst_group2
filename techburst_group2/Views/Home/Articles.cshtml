@using techburst_BLL.Collections
@using Interfaces.BLL
@using techburst_group2.Utilities
@inject ITagCollection TagCollection
@model IEnumerable<ArticleModel>
@{ ViewData["Title"] = "Articles"; }

<head>
    <link rel="stylesheet" href="~/css/articles.css">
</head>

<body>
    <h2 class="contact-big-text">Alle artikelen</h2>

    <div class="dropdown">
        <button class="btn btn-light dropdown-toggle" type="button" data-toggle="dropdown">
          Filter by Category
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
            <li><a href="@Url.Action("LoadAllArticles", "Home")">Reset Filter</a></li>
            <li><a href="@Url.Action("LoadArticlesByTag", "Home", new { tagId = 1 }, null)">Visual Studio</a></li>
            <li><a href="@Url.Action("LoadArticlesByTag", "Home", new { tagId = 2 }, null)">C#</a></li>
            <li><a href="@Url.Action("LoadArticlesByTag", "Home", new { tagId = 3 }, null)">Java</a></li>
            <li><a href="@Url.Action("LoadArticlesByTag", "Home", new { tagId = 4 }, null)">Python</a></li>
            <li><a href="@Url.Action("LoadArticlesByTag", "Home", new { tagId = 15 }, null)">JavaScript</a></li>
        </ul>
    </div>

    <div class="container">
        <div class="card-columns">
            @if (Model != null)
            {
                @foreach (var article in Model)
                {
                    if (article.Content.Length > 160)
                    {
                        article.Content = article.Content.Substring(0, 160) + "...";
                    }
                    string contentWithoutHeaders = ArticleTextManager.ParseHeaderContent(article.Content);
                    string parsedContent = ArticleTextManager.ParseHtmlTags(contentWithoutHeaders);
                    <div class="card shadow border-color">

                        <a href='@Url.Action("ArticlePage", "Article", new { id = article.Id }, null)'>
                            <img class="card-img" src="@article.Images" alt="Cardphoto">
                        </a>

                        <div class="card-body">
                            <h4 asp-action="ArticlePage" class="card-title articles-text">@Html.DisplayFor(model => article.Title)</h4>
                            <small class="text-muted cat">
                                <i class="far fa-clock text-info"></i> Written by: @Html.DisplayFor(model => article.Author)
                                <i class="far fa-clock text-info"></i> &nbsp;&nbsp;|&nbsp;&nbsp;
                                <i class="far fa-clock text-info"></i>
                                <i class="far fa-clock text-info"></i> Readingtime: 5 minutes
                            </small>
                            <p class="card-text">@Html.DisplayFor(model => parsedContent)</p>
                        </div>
                        <div class="card-footer text-muted d-flex justify-content-between bg-transparent border-top-0">
                            <div class="views">
                                @Html.DisplayFor(model => article.CreatedAt)
                            </div>
                            <div class="stats">
                                <i class="far fa-eye"></i>
                                <i class="far fa-comment"></i> 12
                            </div>
                        </div>
                    </div>
                }
            }
        </div>

    </div>

</body>
