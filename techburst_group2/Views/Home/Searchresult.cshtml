@model IEnumerable<ArticleModel>
@using Interfaces.BLL
@using techburst_group2.Utilities
@inject ITagCollection TagCollection
@{var articles = ViewData["Articles"] as List<ArticleModel>;}

    <style>
        .text {
            font-size: 3em;
            color:#000000;
            font-weight: 600;
        }
    </style>

<div class="bg-rockstar border-yellow shadow text-center border-color p-3 contact-big-text">
    <h4 class="text text-center ">Search result:</h4>
</div>

<div class="container mt-3">
    <div class="card-columns">
        @foreach (var article in articles)
        {
            if (article.Content.Length > 160)
            {
                article.Content = article.Content.Substring(0, 160) + "...";
            }
            if (article.Title.Length > 30)
            {
                article.Title = article.Title.Substring(0, 30) + "...";
            }

            string title = ArticleTextManager.ParseHeaderContent(article.Title);
            string contentWithoutHeaders = ArticleTextManager.ParseHeaderContent(article.Content);
            string parsedContent = ArticleTextManager.ParseHtmlTags(contentWithoutHeaders);
            <div class="card shadow border-color articlecard">

                <img class="card-img text-white" src="@article.Images" alt="Image currently unavailable">

                <div class="card-body articlecard">

                    <h5 asp-action="ArticlePage" class="card-title articles-text">@ArticleTextManager.ParseHtmlTags(title)</h5>
                    <small class="text-muted cat">
                        <i class="far fa-clock text-white">Written by: @Html.DisplayFor(model => article.Author)</i>
                        <i class="far fa-clock text-info"></i> &nbsp; &nbsp;| &nbsp; &nbsp;
                        <i class="far fa-clock text-info"></i>
                    </small>
                    <p class="mt-2">@ArticleTextManager.ParseHtmlTags(contentWithoutHeaders)</p>
                </div>
                <a class="card-img-overlay" href="@Url.Action("ArticlePage", "Article", new { id = article.Id }, null)"></a>
                <div class="card-footer text-muted d-flex justify-content-between bg-transparent border-top-0">
                    <div class="views">
                        @{
                            var date = article.CreatedAt.Date.ToString("dd/MM/yyyy");
                        }
                        <p class="far fa-clock text-dark">publish date:  @Html.DisplayFor(modelItem => date)</p>
                    </div>

                </div>
            </div>
        }


    </div>

</div>